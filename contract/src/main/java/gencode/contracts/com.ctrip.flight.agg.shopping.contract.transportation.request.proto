syntax = "proto3";

package com.ctrip.flight.agg.shopping.contract.transportation.request;
import "com.ctrip.flight.agg.shopping.contract.message.proto";
import "com.ctrip.flight.agg.shopping.contract.transportation.proto";
import "com.ctrip.flight.agg.shopping.contract.transportation.travix.proto";
option java_package = "com.ctrip.flight.agg.shopping.contract.transportation.request";
option java_multiple_files = true;

message RouteSearchRequestType {
    // 从响应报文中获取
    string RequestMessageKey = 1;
    // 反查参数，和原接口反查参数一致
    RouteSearchType RouteSearch = 2;
    // 请求类型，1: 国际请求; 2:国内请求。影响请求路由的选择！
    int32 IntlOrDomesticRequest = 3;

}

message SearchRequestType {
    // 请求头
    com.ctrip.flight.agg.shopping.contract.message.RequestHeaderType RequestHeader = 1;
    // 请求参数
    SearchCriteriaType SearchCriteria = 2;
    // 反查参数
    RouteSearchType RouteSearch = 3;
}

message SearchCriteriaType {
    // 用户请求的行程信息
    repeated JourneyRequestType JourneyRequest = 1;
    // 乘客信息
    repeated PaxRequestType PaxRequest = 2;
    // 机票舱等， Y: 经济舱； W：超级经济舱； C：公务舱；F：头等舱
    repeated string CabinCode = 3;
    // 币种
    string SaleCurrency = 4;
    // 语种(Locale格式)
    string Language = 5;
    // 扩展结点
    repeated com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType ExtensionOption = 6;
    // 用户信息
    UserParameterType UserParameter = 7;
    //  ABTest的Code和Version
    repeated com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AbTestOption = 8;
    // 结果控制参数
    ResultControlType ResultControl = 9;
    // 请求类型，1: 国际请求; 2:国内请求。影响请求路由的选择！
    int32 IntlOrDomesticRequest = 10;
    /**
    * 请求场景。空:默认是主流程查询。
    * MainProcess:主流程查询
    * FlightXHotel:宫格机酒主流程查询
    * FlightXHotelChangeFlight:宫格机酒更换航班查询
    */
    string RequestScene = 11;

    // 高级搜索
    AdvancedOptionType AdvancedOption = 12;

    // 指定查询
    SpecifiedOptionType SpecifiedOption = 13;

    // 适配查询扩展
    AdaptedOptionType AdaptedOption = 14;

    // 交叉辅营场景查询参数
    CrossSearchOptionType CrossSearchOption = 15;

    // 实时查询参数
    RealControlOption RealControlOption = 16;
}

message RealControlOption {
  // Repricing场景查询参数: 1 repricing查询, 2 大系统列表查询无结果, 4 冷门航线
  int32 RepricingType = 1;
  // 分程查询参数
  int32 SegmentSearchType = 2;
  // Repricing场景返回类型: 0(默认), 有新运价才返回结果, 1 始终需要返回结果
  int32 RepricingReturnType = 3;
}

message JourneyRequestType {
    // 出发日期，format: yyyy-MM-dd
    string DepartDate = 1;
    // 出发地点
    LocationType DepartLocation = 2;
    // 到达地点
    LocationType ArriveLocation = 3;
    // 指定中转点 仅支持国内线路
    LocationType TransferLocation = 4;
}

message LocationType {
    // Location的类型，1:CityCode; 2:CityID; 3:AirportCode; 4:RegionCode
    int32 Type = 1;
    // 地点
    string Location = 2;
}

// 用户位置参数，适用于交叉辅营场景
message CrossLocationType {
    // CrossLocationType的类型, 1: CityID; 2: CountryID
    int32 Type = 1;
    // 地点
    string Location = 2;
}

message PaxRequestType {
    // 乘客类型。1: Adult; 2: Child; 4: Infant;
    int32 AgeType = 1;
    // 乘客人数
    int32 Count = 2;
    // 国籍
    string Nationality = 3;
    // 乘机人明细
    repeated PaxDetailType PaxDetail = 4;
}

// 乘机人明细
message PaxDetailType {
    // 年龄
    int32 Age = 1;
    // 性别
    string Sex = 2;
    // 证件类型
    string IdentityType = 3;
    // 证件号码
    string IdentityNumber = 4;
}

message RouteSearchType {
    /**
    * 查询模式，默认0或者RouteSearchType为空表示列表查询。
    * 1: 普通反查 (匹配前MaxJourneyNo程的航班);
    * 2: 严格反查 (严格匹配所有行程的价格);
    * 3: 严格反查前N程 (严格匹配前MaxJourneyNo程的价格)
    */
    int32 SearchMode = 1;
    // 反查时待匹配的最大行程号(SearchMode = 2时忽略该字段)
    int32 MaxJourneyNo = 2;
    // 该接口返回的OfferToken，反查时用
    string OfferToken = 3;
    // 国际agg查询接口返回的价格token，为了兼容
    string IntlAggRouteSearchToken = 4;
    // 分程查询时指定每一程的offertoken进行严格反查 仅严格反查生效
    repeated SeparateJourneyOfferTokenType SeparateJourneyOfferToken = 5;
}

message UserParameterType {
    // 用户ID
    string UserID = 1;
    // 携程会员等级
    string MemberLevel = 2;
    // 坐标信息
    CoordinateType Coordinate = 3;
    // 机酒的高星用户场景使用
    int32 FlightXHotelUserLevel = 4;
}

message ResultControlType {
    // 是否需要推荐位产品
    bool NeedRecommendation = 1;
    // 偏好(出票)航司
    repeated string ValidatingCarrier = 2;
    // 是否根据PaxRequest中的乘客类型做严格匹配。请求国内时有效。 默认false：严格匹配。
    bool NonMatchRequestAgeType = 3;
    // 0:不进行行程拆分，1：按Journey拆分行程返回offer
    int32 SeparateJourneyType = 4;
    // 多交通场景下查询控制
    MultiTrafficControlType MultiTrafficControl = 5;
    // 0:no control;    1:nonStop Direct result;     2:direct result(has stop);    4:only transfer result;
    int32 DirectControlType = 6;
    // 模块功能限制选项
    ModuleAccessOptionType ModuleAccessOption = 7;
}

message CoordinateType {
    // 经度
    double Longitude = 1;
    // 纬度
    double Latitude = 2;
    // 更新时间 format：yyyy-MM-dd'T'HH:mm:ss'Z'
    string UpdateTime = 3;
    // 用户位置信息
    LocationType Location = 4;
}

message AdvancedOptionType {
    // 与用户程相关的信息
    repeated AdvancedJourneyOptionType AdvancedJourneyOption = 1;
    // 报销凭证,不填表示不限。1: 发票, 2: 行程单, 4: 行+差, 8: 境外电子凭证
    repeated int32 InvoiceType = 2;
}

message AdvancedJourneyOptionType {
    int32 JourneyNo = 1;
    // 交通工具类型，1-flight; 2-train; 4-bus
    int32 TransportType = 2;
    // 航组号. e.g: FM1234
    repeated string TransportNo = 3;
    // 出发时间范围.只支持小时范围(0到24)，如3-5，表示第一程出发时间在3:00-5:00;不填则不限出发时间
    IntRangeType DepartTimeRange = 4;
    // 到达时间范围.只支持小时范围(0到24)，如3-5，表示第一程到达时间在3:00-5:00;不填则不限出发时间
    IntRangeType ArriveTimeRange = 5;
    // 中转参数，不填表示不限.只有在TransportType=1时才有意义
    AdvancedTransferOptionType AdvancedTransferOption = 6;
    // 飞机信息
    FlightAdvancedOptionType FlightAdvancedOption = 9;
}

message FlightAdvancedOptionType {
    // 舱等。支持 Y W C F四种舱等
    repeated string CabinCode = 1;
    // 指定用户程的航司（默认MC/OC）
    string Carrier = 2;
}

message AdvancedTransferOptionType {
    // 0:不限制  1：直飞  2：中转
    int32 TransferType = 1;
    // 只支持一个中转时长范围,如a-b，表示中转时长在[a,b]分钟内；不填表示时长不限
    IntRangeType TransferTimeRange = 3;
    //表示行程包含这个中转点；不填表示中转点不限.
    repeated LocationType TransferLocation = 4;
}

message SpecifiedOptionType {
    // 与用户程相关的信息
    repeated SpecifiedJourneyOptionType SpecifiedJourneyOption = 1;
    // 调用方标识
    int32 ClientType = 2;
    // 指定Channel
    repeated string BookingChannel = 3;
    // 指定票台.与ExcludesAgencyCode二选一
    repeated string AgencyCode = 4;
    // 指定排除的票台
    repeated string ExcludesAgencyCode = 5;
    // 指定运价基础
    repeated string FareBasis = 6;
    repeated string FareClass = 7;
    repeated int32 ProductCategory = 8;
    repeated int32 SubProductCategory = 9;
    // 0:普通指定，1：指定无报价航班
    int32 SpecifiedType = 10;
}

message SpecifiedJourneyOptionType {
    // 行程号
    int32 JourneyNo = 1;
    // 每程内的段号
    int32 SegmentNo = 2;
    // 交通工具类型，1-flight; 2-train; 4-bus
    int32 TransportType = 3;
    // 交通号. e.g: FM1234
    string TransportNo = 4;
    // 飞机交通类型具体指定信息
    FlightSpecifiedOptionType FlightSpecifiedOption = 5;
    // 出发时间。格式: yyyy-MM-dd HH:mm:ss。e.g:2021-08-30 00:00:00
    string DepartDate = 6;
    // 出发地
    LocationType DepartLocation = 7;
    // 到达地
    LocationType ArriveLocation = 8;
    // 票号,可以为空
    IntegerType ProductDetailIndex = 9;
    // 到达时间。格式: yyyy-MM-dd HH:mm:ss。e.g:2021-08-30 00:00:00
    string ArriveDate = 10;
}

message FlightSpecifiedOptionType {
    // 实际承运航司
    string OperatingCarrier = 1;
    // 舱等。支持 Y W C F四种舱等
    repeated string CabinCode = 5;
    // 子仓
    string RBD = 6;
}

// 适配查询扩展
message AdaptedOptionType {
    // 指定X产品查询
    repeated XProductAppointedType XProductAppointed = 1;
    // 国内混政策严格反差回传token
    repeated CombinationPolicyType CombinationPolicy = 2;
    // for travix
    com.ctrip.flight.agg.shopping.contract.transportation.travix.TravixAdaptedOptionType TravixAdaptedOption = 3;
    // 标签列表
    repeated com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 4;
}

// 指定X产品查询
message XProductAppointedType {
    // X产品类型
    string ProductType = 1;
    // X产品Token
    repeated string XToken = 2;
}

// 严格反查国内混政策产品时需要传入
message CombinationPolicyType {
    // 行程号
    int32 JourneyNo = 1;
    // 混政策token
    string PolicyToken = 2;
}

// 分程查询时指定每一程的offertoken进行严格反查 仅严格反查生效
message SeparateJourneyOfferTokenType {
    // 行程号
    int32 JourneyNo = 1;
    // 该行程的offertoken
    string OfferToken = 2;
}

// 多交通场景下查询控制
message MultiTrafficControlType{
    /*
        机铁场景指定交通工具查询，目前仅支持指定机票查询
        1：机票
    */
    int32 TransportType = 1;
}

// 交叉辅营场景查询参数
message CrossSearchOptionType {
    // 用户位置参数
    UserPositionType UserPosition = 1;
}

// 用户位置参数
message UserPositionType {
    // 业务场景  1: 机酒
    int32 BizType = 1;
    // 用户IP
    string UserIP = 2;
    // 经度
    double Longitude = 3;
    // 纬度
    double Latitude = 4;
    // 位置信息列表
    repeated CrossLocationType Location = 5;
}

// 模块功能限制选项
message ModuleAccessOptionType {
    // 模块功能限制列表，每个实体中白名单或黑名单限填一个，同时填写仅看黑名单
    repeated ModuleAccessType ModuleAccess = 1;
}

// 模块功能限制实体
message ModuleAccessType {
    // 功能模块类型：1、大交通；2、推荐位；3、机酒
    int32 Type = 1;
    /*
     * 白名单列表，列表中的填写的功能不一定会出，需要结合其他逻辑，但不在列表中的功能一定会拦掉
     * 单程推荐位：
     *     空铁推荐：FlightXTrain；
     *     邻近城市推荐：NearFlight；
     *     临近日期推荐：NearTimeFlight；
     *     单推往返：Single2Round；
     *     中转推荐：TransferFlight；
     *     直铁推荐：Train；
     * 单程大交通：
     *     空铁：FlightXTrain；
     *     邻近城市：NearFlight；
     *     临近日期：NearTimeFlight；
     *     直铁：Train；
     *     直巴：DirectBus；
     */
    repeated string Allow = 2;
    // 黑名单列表，在列表中的功能一定会拦掉，含*表示拦截所有，其余可填内容同白名单列表
    repeated string Block = 3;
}
